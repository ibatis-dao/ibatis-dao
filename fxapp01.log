2015-03-12 23:26:02,416 [main] DEBUG fxapp01.dto.NestedIntRangeTest - incLength
2015-03-12 23:26:02,432 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,432 [main] DEBUG fxapp01.dto.NestedIntRange - >>> incLength(1). old length=0
2015-03-12 23:26:02,433 [main] DEBUG fxapp01.dto.NestedIntRange - >>> incLength(-2). old length=1
2015-03-12 23:26:02,433 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,433 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=first=0, length=100, parentRange=null)
2015-03-12 23:26:02,433 [main] DEBUG fxapp01.dto.NestedIntRange - >>> incLength(-1). old length=0
2015-03-12 23:26:02,448 [main] DEBUG fxapp01.dto.NestedIntRangeTest - getParentRange
2015-03-12 23:26:02,448 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,455 [main] DEBUG fxapp01.dto.NestedIntRangeTest - setParentRange
2015-03-12 23:26:02,455 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,455 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=first=0, length=100, parentRange=null)
2015-03-12 23:26:02,463 [main] DEBUG fxapp01.dto.NestedIntRangeTest - getLast
2015-03-12 23:26:02,463 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,471 [main] DEBUG fxapp01.dto.NestedIntRangeTest - getFirst
2015-03-12 23:26:02,472 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,482 [main] DEBUG fxapp01.dto.NestedIntRangeTest - setFirst
2015-03-12 23:26:02,482 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,483 [main] DEBUG fxapp01.dto.NestedIntRange - >>> setFirst(1). old value=0
2015-03-12 23:26:02,483 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,483 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=first=0, length=100, parentRange=null)
2015-03-12 23:26:02,483 [main] DEBUG fxapp01.dto.NestedIntRange - >>> setFirst(-1). old value=0
2015-03-12 23:26:02,491 [main] DEBUG fxapp01.dto.NestedIntRangeTest - getLength
2015-03-12 23:26:02,492 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,500 [main] DEBUG fxapp01.dto.NestedIntRangeTest - setLength
2015-03-12 23:26:02,501 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,501 [main] DEBUG fxapp01.dto.NestedIntRange - >>> setLength(1)
2015-03-12 23:26:02,501 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,501 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=first=0, length=100, parentRange=null)
2015-03-12 23:26:02,501 [main] DEBUG fxapp01.dto.NestedIntRange - >>> setLength(-1)
2015-03-12 23:26:02,510 [main] DEBUG fxapp01.dto.NestedIntRangeTest - IsInbound
2015-03-12 23:26:02,510 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,510 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=0). first=0, last=99
2015-03-12 23:26:02,510 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=50). first=0, last=99
2015-03-12 23:26:02,510 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=99). first=0, last=99
2015-03-12 23:26:02,510 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=-1). first=0, last=99
2015-03-12 23:26:02,510 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=100). first=0, last=99
2015-03-12 23:26:02,518 [main] DEBUG fxapp01.dto.NestedIntRangeTest - IsInbound
2015-03-12 23:26:02,518 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,518 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,526 [main] DEBUG fxapp01.dto.NestedIntRangeTest - getMinDistance
2015-03-12 23:26:02,527 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,527 [main] TRACE fxapp01.dto.NestedIntRange - getMinDistance(to=1)
2015-03-12 23:26:02,527 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=1). first=0, last=-1
2015-03-12 23:26:02,527 [main] DEBUG fxapp01.dto.NestedIntRange - dist=1
2015-03-12 23:26:02,534 [main] DEBUG fxapp01.dto.NestedIntRangeTest - getMaxDistance
2015-03-12 23:26:02,534 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,534 [main] TRACE fxapp01.dto.NestedIntRange - getMaxDistance(to=100)
2015-03-12 23:26:02,534 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=100). first=0, last=49
2015-03-12 23:26:02,534 [main] DEBUG fxapp01.dto.NestedIntRange - dist=100
2015-03-12 23:26:02,541 [main] DEBUG fxapp01.dto.NestedIntRangeTest - IsOverlapped
2015-03-12 23:26:02,541 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,541 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,548 [main] DEBUG fxapp01.dto.NestedIntRangeTest - Overlap
2015-03-12 23:26:02,548 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,548 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,548 [main] TRACE fxapp01.dto.NestedIntRange - Overlap(aRange)
2015-03-12 23:26:02,548 [main] DEBUG fxapp01.dto.NestedIntRange - is overlapped
2015-03-12 23:26:02,548 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,556 [main] DEBUG fxapp01.dto.NestedIntRangeTest - Add
2015-03-12 23:26:02,556 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,556 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,556 [main] DEBUG fxapp01.dto.NestedIntRange - Add(). minStart=0, maxLast=99
2015-03-12 23:26:02,556 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,564 [main] DEBUG fxapp01.dto.NestedIntRangeTest - Extend
2015-03-12 23:26:02,564 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,564 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,564 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=99). first=0, last=49
2015-03-12 23:26:02,564 [main] DEBUG fxapp01.dto.NestedIntRange - Extend(). minStart=0, maxLast=99
2015-03-12 23:26:02,564 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=100, parentRange=null)
2015-03-12 23:26:02,571 [main] DEBUG fxapp01.dto.NestedIntRangeTest - Shift
2015-03-12 23:26:02,571 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,571 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=50, length=50, parentRange=null)
2015-03-12 23:26:02,578 [main] DEBUG fxapp01.dto.NestedIntRangeTest - Complement
2015-03-12 23:26:02,578 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=50, parentRange=null)
2015-03-12 23:26:02,578 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=50, length=50, parentRange=null)
2015-03-12 23:26:02,578 [main] TRACE fxapp01.dto.NestedIntRange - Complement(to=99)
2015-03-12 23:26:02,578 [main] TRACE fxapp01.dto.NestedIntRange - getMinDistance(to=99)
2015-03-12 23:26:02,578 [main] TRACE fxapp01.dto.NestedIntRange - IsInbound(value=99). first=0, last=49
2015-03-12 23:26:02,579 [main] DEBUG fxapp01.dto.NestedIntRange - dist=50
2015-03-12 23:26:02,579 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=50, length=50, parentRange=null)
2015-03-12 23:26:02,585 [main] DEBUG fxapp01.dto.NestedIntRangeTest - clone
2015-03-12 23:26:02,586 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,586 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,593 [main] DEBUG fxapp01.dto.NestedIntRangeTest - equals
2015-03-12 23:26:02,593 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,600 [main] DEBUG fxapp01.dto.NestedIntRangeTest - hashCode
2015-03-12 23:26:02,600 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,600 [main] DEBUG fxapp01.dto.NestedIntRangeTest - hashCode()=3524845
2015-03-12 23:26:02,607 [main] DEBUG fxapp01.dto.NestedIntRangeTest - toString
2015-03-12 23:26:02,607 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,614 [main] DEBUG fxapp01.dto.NestedIntRangeTest - IsSingular
2015-03-12 23:26:02,614 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=null)
2015-03-12 23:26:02,622 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkLengths
2015-03-12 23:26:02,622 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=0)
2015-03-12 23:26:02,622 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,622 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> incLength(5). old length=10
2015-03-12 23:26:02,622 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> incLength(-10). old length=15
2015-03-12 23:26:02,629 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkMoveLimits
2015-03-12 23:26:02,629 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,629 [main] DEBUG fxapp01.dto.LimitedIntRange - setRightLimit(rightLimit=10)
2015-03-12 23:26:02,629 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(5). old value=1
2015-03-12 23:26:02,629 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setLength(3)
2015-03-12 23:26:02,629 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(5). old value=1
2015-03-12 23:26:02,629 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> incLength(2). old length=3
2015-03-12 23:26:02,637 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkClone
2015-03-12 23:26:02,637 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,637 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,637 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(2). old value=1
2015-03-12 23:26:02,650 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkIsInbound
2015-03-12 23:26:02,654 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=0). first=1, last=10
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=1). first=1, last=10
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=5). first=1, last=10
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=10). first=1, last=10
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=11). first=1, last=10
2015-03-12 23:26:02,655 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(2). old value=1
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=1). first=2, last=11
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=11). first=2, last=11
2015-03-12 23:26:02,655 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=12). first=2, last=11
2015-03-12 23:26:02,662 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkIsInbound
2015-03-12 23:26:02,662 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,662 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,662 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(11). old value=10
2015-03-12 23:26:02,662 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(9). old value=11
2015-03-12 23:26:02,662 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setLength(11)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkMinMaxDistance
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=1)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=1). first=5, last=9
2015-03-12 23:26:02,670 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=4
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - getMaxDistance(to=1)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=1). first=5, last=9
2015-03-12 23:26:02,670 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=8
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=7)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=7). first=5, last=9
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - getMaxDistance(to=7)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=7). first=5, last=9
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=10)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=10). first=5, last=9
2015-03-12 23:26:02,670 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=1
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - getMaxDistance(to=10)
2015-03-12 23:26:02,670 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=10). first=5, last=9
2015-03-12 23:26:02,670 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=5
2015-03-12 23:26:02,677 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkIsOverlapped
2015-03-12 23:26:02,677 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,677 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,677 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(1). old value=10
2015-03-12 23:26:02,677 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(5). old value=1
2015-03-12 23:26:02,677 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(10). old value=5
2015-03-12 23:26:02,677 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(15). old value=10
2015-03-12 23:26:02,677 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(15). old value=15
2015-03-12 23:26:02,677 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(20). old value=15
2015-03-12 23:26:02,684 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkOverlap
2015-03-12 23:26:02,684 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,684 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,684 [main] TRACE fxapp01.dto.LimitedIntRange - Overlap(aRange)
2015-03-12 23:26:02,684 [main] DEBUG fxapp01.dto.LimitedIntRange - is overlapped
2015-03-12 23:26:02,684 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,684 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange2.setFirst(5)
2015-03-12 23:26:02,684 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(5). old value=10
2015-03-12 23:26:02,684 [main] TRACE fxapp01.dto.LimitedIntRange - Overlap(aRange)
2015-03-12 23:26:02,684 [main] DEBUG fxapp01.dto.LimitedIntRange - is overlapped
2015-03-12 23:26:02,685 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,685 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange2.setFirst(1)
2015-03-12 23:26:02,685 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(100). old value=5
2015-03-12 23:26:02,685 [main] TRACE fxapp01.dto.LimitedIntRange - Overlap(aRange)
2015-03-12 23:26:02,685 [main] DEBUG fxapp01.dto.LimitedIntRange - Is not overlapped. returns Singular
2015-03-12 23:26:02,692 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkIsSingular
2015-03-12 23:26:02,692 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,699 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkAdd
2015-03-12 23:26:02,699 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,699 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,699 [main] DEBUG fxapp01.dto.LimitedIntRange - Add(). minStart=5, maxLast=19
2015-03-12 23:26:02,699 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=15, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,699 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange2.setFirst(0)
2015-03-12 23:26:02,699 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(1). old value=5
2015-03-12 23:26:02,699 [main] DEBUG fxapp01.dto.LimitedIntRange - Add(). minStart=1, maxLast=19
2015-03-12 23:26:02,699 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=19, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,700 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange2.setFirst(20)
2015-03-12 23:26:02,700 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(20). old value=1
2015-03-12 23:26:02,700 [main] DEBUG fxapp01.dto.LimitedIntRange - Add(). minStart=10, maxLast=24
2015-03-12 23:26:02,700 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=15, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,706 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkExtend
2015-03-12 23:26:02,706 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,707 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Extend(1)
2015-03-12 23:26:02,707 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=1). first=5, last=9
2015-03-12 23:26:02,707 [main] DEBUG fxapp01.dto.LimitedIntRange - Extend(). minStart=1, maxLast=9
2015-03-12 23:26:02,707 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=9, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,707 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Extend(7)
2015-03-12 23:26:02,707 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=7). first=5, last=9
2015-03-12 23:26:02,707 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Extend(15)
2015-03-12 23:26:02,707 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=15). first=5, last=9
2015-03-12 23:26:02,707 [main] DEBUG fxapp01.dto.LimitedIntRange - Extend(). minStart=5, maxLast=15
2015-03-12 23:26:02,707 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=11, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,714 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkShift
2015-03-12 23:26:02,714 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,714 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Shift(-4)
2015-03-12 23:26:02,714 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,714 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Shift(2)
2015-03-12 23:26:02,714 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=7, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,714 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Shift(15)
2015-03-12 23:26:02,714 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=20, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkComplement
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,721 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Complement(1)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - Complement(to=1)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=1)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=1). first=5, last=9
2015-03-12 23:26:02,721 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=4
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=4, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,721 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Complement(7)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - Complement(to=7)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=7)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=7). first=5, last=9
2015-03-12 23:26:02,721 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Complement(15)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - Complement(to=15)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=15)
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=15). first=5, last=9
2015-03-12 23:26:02,721 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=6
2015-03-12 23:26:02,721 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=6, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,721 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - before aRange1.Complement(39)
2015-03-12 23:26:02,722 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(1). old value=5
2015-03-12 23:26:02,722 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setLength(20)
2015-03-12 23:26:02,722 [main] TRACE fxapp01.dto.LimitedIntRange - Complement(to=39)
2015-03-12 23:26:02,722 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=39)
2015-03-12 23:26:02,722 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=39). first=1, last=20
2015-03-12 23:26:02,722 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=19
2015-03-12 23:26:02,722 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=21, length=19, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,729 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkSub
2015-03-12 23:26:02,729 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,729 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,736 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - incLength
2015-03-12 23:26:02,736 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,736 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> incLength(5). old length=5
2015-03-12 23:26:02,743 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - getLast
2015-03-12 23:26:02,743 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,750 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - getFirst
2015-03-12 23:26:02,750 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,761 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - setFirst
2015-03-12 23:26:02,761 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=100, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,761 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(1). old value=0
2015-03-12 23:26:02,761 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setFirst(-1). old value=1
2015-03-12 23:26:02,779 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - getLength
2015-03-12 23:26:02,779 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,795 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - setLength
2015-03-12 23:26:02,795 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,795 [main] DEBUG fxapp01.dto.LimitedIntRange - >>> setLength(10)
2015-03-12 23:26:02,815 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - IsInbound
2015-03-12 23:26:02,815 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,815 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=0). first=1, last=10
2015-03-12 23:26:02,815 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=5). first=1, last=10
2015-03-12 23:26:02,831 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - getMinDistance
2015-03-12 23:26:02,831 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,831 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=10)
2015-03-12 23:26:02,831 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=10). first=5, last=9
2015-03-12 23:26:02,831 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=1
2015-03-12 23:26:02,843 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - getMaxDistance
2015-03-12 23:26:02,843 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,843 [main] TRACE fxapp01.dto.LimitedIntRange - getMaxDistance(to=10)
2015-03-12 23:26:02,843 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=10). first=5, last=9
2015-03-12 23:26:02,843 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=5
2015-03-12 23:26:02,861 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - IsOverlapped
2015-03-12 23:26:02,861 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,861 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,875 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - Overlap
2015-03-12 23:26:02,875 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,875 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,875 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,875 [main] TRACE fxapp01.dto.LimitedIntRange - Overlap(aRange)
2015-03-12 23:26:02,875 [main] DEBUG fxapp01.dto.LimitedIntRange - is overlapped
2015-03-12 23:26:02,875 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,893 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - Add
2015-03-12 23:26:02,893 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,893 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,893 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=15, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,893 [main] DEBUG fxapp01.dto.LimitedIntRange - Add(). minStart=5, maxLast=19
2015-03-12 23:26:02,893 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=15, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,907 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - Extend
2015-03-12 23:26:02,907 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,907 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=50, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,907 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=49). first=0, last=-1
2015-03-12 23:26:02,907 [main] DEBUG fxapp01.dto.LimitedIntRange - Extend(). minStart=0, maxLast=49
2015-03-12 23:26:02,907 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=50, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,915 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - Shift
2015-03-12 23:26:02,915 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,915 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=20, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,915 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=20, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,922 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - Complement
2015-03-12 23:26:02,922 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=50, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,922 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=50, length=50, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,922 [main] TRACE fxapp01.dto.LimitedIntRange - Complement(to=99)
2015-03-12 23:26:02,922 [main] TRACE fxapp01.dto.LimitedIntRange - getMinDistance(to=99)
2015-03-12 23:26:02,922 [main] TRACE fxapp01.dto.LimitedIntRange - IsInbound(value=99). first=0, last=49
2015-03-12 23:26:02,922 [main] DEBUG fxapp01.dto.LimitedIntRange - dist=50
2015-03-12 23:26:02,922 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=50, length=50, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,929 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - getLeftLimit
2015-03-12 23:26:02,929 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,936 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - setLeftLimit
2015-03-12 23:26:02,936 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,943 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - getRightLimit
2015-03-12 23:26:02,943 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:02,949 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - setRightLimit
2015-03-12 23:26:02,949 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,949 [main] DEBUG fxapp01.dto.LimitedIntRange - setRightLimit(rightLimit=10)
2015-03-12 23:26:02,956 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - IsInbound
2015-03-12 23:26:02,956 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,956 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,964 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - Sub
2015-03-12 23:26:02,964 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,964 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,971 [main] TRACE fxapp01.dto.LimitedIntRangeTest - >>> checkSetupBaseFilelds
2015-03-12 23:26:02,971 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,977 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - clone
2015-03-12 23:26:02,977 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,977 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,977 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,984 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - equals
2015-03-12 23:26:02,984 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,984 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=5, length=5, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,984 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=10, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,991 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - hashCode
2015-03-12 23:26:02,991 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=1, length=10, leftLimit=1, rightLimit=2147483647)
2015-03-12 23:26:02,998 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - toString
2015-03-12 23:26:02,998 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:03,006 [main] DEBUG fxapp01.dto.LimitedIntRangeTest - IsSingular
2015-03-12 23:26:03,006 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=0, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:03,006 [main] TRACE fxapp01.dto.LimitedIntRange - >>> contructor(first=0, length=100, leftLimit=0, rightLimit=2147483647)
2015-03-12 23:26:03,014 [main] DEBUG fxapp01.dto.GeoLocationTest - getLatitude
2015-03-12 23:26:03,030 [main] DEBUG fxapp01.dto.GeoLocationTest - setLatitude
2015-03-12 23:26:03,038 [main] DEBUG fxapp01.dto.GeoLocationTest - getLongitude
2015-03-12 23:26:03,044 [main] DEBUG fxapp01.dto.GeoLocationTest - setLongitude
2015-03-12 23:26:03,051 [main] DEBUG fxapp01.dto.GeoLocationTest - distanceTo
2015-03-12 23:26:03,052 [main] TRACE fxapp01.dto.GeoLocation - distanceTo(55.752569, 37.623435)
2015-03-12 23:26:03,052 [main] DEBUG fxapp01.dto.GeoLocation - In radians: lat1=0.9731228281355224, lon1=0.6565522507885729, lat2=0.9730658954953225, lon2=0.6566528166600728
2015-03-12 23:26:03,052 [main] DEBUG fxapp01.dto.GeoLocation - radian angle=8.027502134295429E-5
2015-03-12 23:26:03,052 [main] DEBUG fxapp01.dto.GeoLocation - meters=511.0875418741943
2015-03-12 23:26:03,052 [main] TRACE fxapp01.dto.GeoLocation - distanceTo(55.973185, 37.415936)
2015-03-12 23:26:03,052 [main] DEBUG fxapp01.dto.GeoLocation - In radians: lat1=0.9731228281355224, lon1=0.6565522507885729, lat2=0.9769163710779023, lon2=0.653031275915477
2015-03-12 23:26:03,052 [main] DEBUG fxapp01.dto.GeoLocation - radian angle=0.004277232938062395
2015-03-12 23:26:03,052 [main] DEBUG fxapp01.dto.GeoLocation - meters=27231.888970771546
2015-03-12 23:26:03,052 [main] TRACE fxapp01.dto.GeoLocation - distanceTo(48.712527, 44.513586)
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - In radians: lat1=0.9731228281355224, lon1=0.6565522507885729, lat2=0.8501939831166357, lon2=0.7769086375696526
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - radian angle=0.143176720862546
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - meters=911564.2337436627
2015-03-12 23:26:03,053 [main] TRACE fxapp01.dto.GeoLocation - distanceTo(1.238506, 103.833232)
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - In radians: lat1=0.9731228281355224, lon1=0.6565522507885729, lat2=0.021616007505704894, lon2=1.8122317713871365
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - radian angle=1.3235263280002962
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - meters=8426504.362964217
2015-03-12 23:26:03,053 [main] TRACE fxapp01.dto.GeoLocation - distanceTo(-37.868556, 144.909511)
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - In radians: lat1=0.9731228281355224, lon1=0.6565522507885729, lat2=-0.6609309851758538, lon2=2.5291480844049405
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - radian angle=2.2646173953799735
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - meters=1.4418155467633236E7
2015-03-12 23:26:03,053 [main] TRACE fxapp01.dto.GeoLocation - distanceTo(21.299549, -157.883331)
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - In radians: lat1=0.9731228281355224, lon1=0.6565522507885729, lat2=0.3717472592398657, lon2=-2.7555839599660312
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - radian angle=1.7771974505820287
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - meters=1.1314895483646926E7
2015-03-12 23:26:03,053 [main] TRACE fxapp01.dto.GeoLocation - distanceTo(-54.670221, -65.153145)
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - In radians: lat1=0.9731228281355224, lon1=0.6565522507885729, lat2=-0.9541753592429468, lon2=-1.1371368982792809
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - radian angle=2.413345336072306
2015-03-12 23:26:03,053 [main] DEBUG fxapp01.dto.GeoLocation - meters=1.5365062691633953E7
2015-03-12 23:26:03,060 [main] DEBUG fxapp01.dao.sort.SortOrderTest - toggle
2015-03-12 23:26:03,091 [main] DEBUG fxapp01.dao.sort.SortOrderTest - build
2015-03-12 23:26:03,098 [main] DEBUG fxapp01.dao.sort.SortOrderTest - size
2015-03-12 23:26:03,105 [main] DEBUG fxapp01.dao.sort.SortOrderTest - getName
2015-03-12 23:26:03,112 [main] DEBUG fxapp01.dao.sort.SortOrderTest - getDirection
2015-03-12 23:26:03,119 [main] DEBUG fxapp01.dao.sort.SortOrderTest - del
2015-03-12 23:26:03,127 [main] DEBUG fxapp01.dao.sort.SortOrderTest - clear
2015-03-12 23:26:03,136 [main] DEBUG fxapp01.dao.sort.SortOrderTest - add
2015-03-12 23:26:03,143 [main] TRACE fxapp01.dao.filter.SqlFilterTest - getArgs
2015-03-12 23:26:03,158 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:03,159 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:03,165 [main] TRACE fxapp01.dao.BatisORM - >>> constructor
2015-03-12 23:26:03,165 [main] DEBUG fxapp01.dao.BatisORM - configURI=fxapp01/dao/batis-config.xml
2015-03-12 23:26:03,173 [main] DEBUG fxapp01.dao.BatisORM - config ready
2015-03-12 23:26:04,193 [main] ERROR org.apache.ibatis.executor.BaseExecutor - Could not get a databaseId from dataSource
java.sql.SQLException: Io exception: The Network Adapter could not establish the connection
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:112)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:146)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:255)
	at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:387)
	at oracle.jdbc.driver.PhysicalConnection.<init>(PhysicalConnection.java:414)
	at oracle.jdbc.driver.T4CConnection.<init>(T4CConnection.java:165)
	at oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:35)
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:801)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.apache.ibatis.datasource.unpooled.UnpooledDataSource.doGetConnection(UnpooledDataSource.java:195)
	at org.apache.ibatis.datasource.unpooled.UnpooledDataSource.doGetConnection(UnpooledDataSource.java:190)
	at org.apache.ibatis.datasource.unpooled.UnpooledDataSource.getConnection(UnpooledDataSource.java:92)
	at org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:375)
	at org.apache.ibatis.datasource.pooled.PooledDataSource.getConnection(PooledDataSource.java:84)
	at org.apache.ibatis.mapping.VendorDatabaseIdProvider.getDatabaseProductName(VendorDatabaseIdProvider.java:77)
	at org.apache.ibatis.mapping.VendorDatabaseIdProvider.getDatabaseName(VendorDatabaseIdProvider.java:62)
	at org.apache.ibatis.mapping.VendorDatabaseIdProvider.getDatabaseId(VendorDatabaseIdProvider.java:50)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.databaseIdProviderElement(XMLConfigBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:105)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parse(XMLConfigBuilder.java:92)
	at org.apache.ibatis.session.SqlSessionFactoryBuilder.build(SqlSessionFactoryBuilder.java:80)
	at org.apache.ibatis.session.SqlSessionFactoryBuilder.build(SqlSessionFactoryBuilder.java:66)
	at fxapp01.dao.BatisORM.<init>(BatisORM.java:58)
	at fxapp01.dao.BaseDao.createDaoFactory(BaseDao.java:50)
	at fxapp01.dao.BaseDao.<init>(BaseDao.java:42)
	at fxapp01.dao.filter.Filter.<init>(Filter.java:37)
	at fxapp01.dao.filter.Filter$Equals.<init>(Filter.java:136)
	at fxapp01.dao.filter.SqlFilterTest.getArgs(SqlFilterTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-03-12 23:26:04,389 [main] DEBUG fxapp01.dao.BatisORM - SqlSessionFactoryBuilder created
2015-03-12 23:26:04,518 [main] TRACE fxapp01.dao.BaseDao - getSQLFragment
2015-03-12 23:26:04,518 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,518 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,534 [main] TRACE fxapp01.dao.filter.SqlFilterTest - getTemplate
2015-03-12 23:26:04,534 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,534 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,534 [main] TRACE fxapp01.dao.BaseDao - getSQLFragment
2015-03-12 23:26:04,535 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,535 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,544 [main] TRACE fxapp01.dao.filter.SqlFilterTest - getArgCount
2015-03-12 23:26:04,544 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,544 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,544 [main] TRACE fxapp01.dao.BaseDao - getSQLFragment
2015-03-12 23:26:04,544 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,544 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,559 [main] TRACE fxapp01.dao.filter.SqlFilterTest - getText
2015-03-12 23:26:04,559 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,559 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,559 [main] TRACE fxapp01.dao.BaseDao - getSQLFragment
2015-03-12 23:26:04,559 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,559 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,572 [main] TRACE fxapp01.dao.filter.SqlFilterTest - testSimpleFilters
2015-03-12 23:26:04,572 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,572 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,584 [main] TRACE fxapp01.dao.BaseDao - getSQLFragment
2015-03-12 23:26:04,584 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,584 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,597 [main] TRACE fxapp01.dao.filter.SqlFilterTest - testComplexFilter
2015-03-12 23:26:04,597 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,597 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,597 [main] TRACE fxapp01.dao.BaseDao - getSQLFragment
2015-03-12 23:26:04,597 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,597 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,619 [main] TRACE fxapp01.dao.BaseDaoTest - createDBSession
2015-03-12 23:26:04,619 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,620 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,620 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,620 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,663 [main] TRACE fxapp01.dao.BaseDaoTest - getDBSession
2015-03-12 23:26:04,663 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,663 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,663 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,663 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,663 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,670 [main] TRACE fxapp01.dao.BaseDaoTest - closeDBSession
2015-03-12 23:26:04,671 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,671 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,671 [main] TRACE fxapp01.dao.BaseDao - >>> closeDBSession. session=null
2015-03-12 23:26:04,678 [main] TRACE fxapp01.dao.BaseDaoTest - getMapper
2015-03-12 23:26:04,678 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,678 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,678 [main] TRACE fxapp01.dao.BaseDao - >>> getMapper
2015-03-12 23:26:04,678 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,678 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,678 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,705 [main] TRACE fxapp01.dao.BaseDaoTest - getDBConnection
2015-03-12 23:26:04,705 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,705 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,705 [main] TRACE fxapp01.dao.BaseDao - >>> getDBConnection
2015-03-12 23:26:04,705 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,705 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,705 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,717 [main] TRACE fxapp01.dao.BaseDaoTest - getConfiguration
2015-03-12 23:26:04,717 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,717 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,717 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,717 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,724 [main] TRACE fxapp01.dao.BaseDaoTest - getBeanPropertiesMapping
2015-03-12 23:26:04,724 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,724 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,724 [main] TRACE fxapp01.dao.BaseDao - >>> getBeanPropertiesMapping
2015-03-12 23:26:04,724 [main] TRACE fxapp01.dao.BatisORM - >>> getDAOProperties()
2015-03-12 23:26:04,724 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,724 [main] DEBUG fxapp01.dao.BatisORM - ResultMap ID=fxapp01.dao.TestItemMapper.TestItemMap, Type=fxapp01.dto.TestItemDTO
2015-03-12 23:26:04,729 [main] DEBUG fxapp01.dao.BatisORM - Column=ID, Property=id, JavaType=class java.math.BigInteger
2015-03-12 23:26:04,729 [main] DEBUG fxapp01.dao.BatisORM - Column=NAME, Property=name, JavaType=class java.lang.String
2015-03-12 23:26:04,736 [main] TRACE fxapp01.dao.BaseDaoTest - rollback
2015-03-12 23:26:04,736 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,736 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,736 [main] TRACE fxapp01.dao.BaseDao - >>> rollback(); session=null
2015-03-12 23:26:04,743 [main] TRACE fxapp01.dao.BaseDaoTest - getDatabaseId
2015-03-12 23:26:04,743 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,743 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,743 [main] TRACE fxapp01.dao.BaseDao - >>> getDatabaseId
2015-03-12 23:26:04,743 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,743 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,743 [main] DEBUG fxapp01.dao.BaseDaoTest - DatabaseId=null
2015-03-12 23:26:04,751 [main] TRACE fxapp01.dao.BaseDaoTest - getEnvironmentId
2015-03-12 23:26:04,751 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,751 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,751 [main] TRACE fxapp01.dao.BaseDao - >>> getEnvironmentId
2015-03-12 23:26:04,751 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,751 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,751 [main] DEBUG fxapp01.dao.BaseDaoTest - EnvironmentId=development-oracle
2015-03-12 23:26:04,758 [main] TRACE fxapp01.dao.BaseDaoTest - getSQLFragment
2015-03-12 23:26:04,758 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,758 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,758 [main] TRACE fxapp01.dao.BaseDao - getSQLFragment
2015-03-12 23:26:04,758 [main] TRACE fxapp01.dao.BaseDao - >>> getConfiguration
2015-03-12 23:26:04,758 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,766 [main] TRACE fxapp01.dao.BaseDaoTest - commit
2015-03-12 23:26:04,766 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,766 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,766 [main] TRACE fxapp01.dao.BaseDao - >>>  commit(); session=null
2015-03-12 23:26:04,773 [main] TRACE fxapp01.dao.DAOTest01 - >>> testSelectByRange
2015-03-12 23:26:04,778 [main] TRACE fxapp01.dao.TestItemDAO - >>> constructor
2015-03-12 23:26:04,778 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,778 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,779 [main] TRACE fxapp01.dao.BaseDao - >>> getBeanPropertiesMapping
2015-03-12 23:26:04,779 [main] TRACE fxapp01.dao.BatisORM - >>> getDAOProperties()
2015-03-12 23:26:04,779 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,779 [main] DEBUG fxapp01.dao.BatisORM - ResultMap ID=fxapp01.dao.TestItemMapper.TestItemMap, Type=fxapp01.dto.TestItemDTO
2015-03-12 23:26:04,779 [main] DEBUG fxapp01.dao.BatisORM - Column=ID, Property=id, JavaType=class java.math.BigInteger
2015-03-12 23:26:04,779 [main] DEBUG fxapp01.dao.BatisORM - Column=NAME, Property=name, JavaType=class java.lang.String
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.TestItemDAO - <<< constructor
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=2, length=3, parentRange=null)
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.TestItemDAO - >>> select
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.BaseDao - >>> getMapper
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,784 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,791 [main] ERROR fxapp01.dao.TestItemDAO - 
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): fxapp01.dao.TestItemMapper.select
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:189)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:43)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:51)
	at com.sun.proxy.$Proxy9.select(Unknown Source)
	at fxapp01.dao.TestItemDAO.select(TestItemDAO.java:80)
	at fxapp01.dao.DAOTest01.testSelectByRange(DAOTest01.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-03-12 23:26:04,791 [main] TRACE fxapp01.dao.BaseDao - >>> closeDBSession. session=org.apache.ibatis.session.defaults.DefaultSqlSession@37d31475
2015-03-12 23:26:04,798 [main] TRACE fxapp01.dao.DAOTest01 - >>> testSelectBE
2015-03-12 23:26:04,798 [main] TRACE fxapp01.dao.TestItemDAO - >>> constructor
2015-03-12 23:26:04,798 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,798 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,799 [main] TRACE fxapp01.dao.BaseDao - >>> getBeanPropertiesMapping
2015-03-12 23:26:04,799 [main] TRACE fxapp01.dao.BatisORM - >>> getDAOProperties()
2015-03-12 23:26:04,799 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,799 [main] DEBUG fxapp01.dao.BatisORM - ResultMap ID=fxapp01.dao.TestItemMapper.TestItemMap, Type=fxapp01.dto.TestItemDTO
2015-03-12 23:26:04,799 [main] DEBUG fxapp01.dao.BatisORM - Column=ID, Property=id, JavaType=class java.math.BigInteger
2015-03-12 23:26:04,799 [main] DEBUG fxapp01.dao.BatisORM - Column=NAME, Property=name, JavaType=class java.lang.String
2015-03-12 23:26:04,799 [main] TRACE fxapp01.dao.TestItemDAO - <<< constructor
2015-03-12 23:26:04,799 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=10, parentRange=null)
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.TestItemDAO - >>> selectBE
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.BaseDao - >>> getMapper
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,966 [main] TRACE fxapp01.dao.BaseDao - >>> closeDBSession. session=org.apache.ibatis.session.defaults.DefaultSqlSession@7113b13f
2015-03-12 23:26:04,974 [main] TRACE fxapp01.dao.DAOTest01 - >>> testInsertRow
2015-03-12 23:26:04,974 [main] TRACE fxapp01.dao.TestItemDAO - >>> constructor
2015-03-12 23:26:04,974 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,974 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BaseDao - >>> getBeanPropertiesMapping
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BatisORM - >>> getDAOProperties()
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,975 [main] DEBUG fxapp01.dao.BatisORM - ResultMap ID=fxapp01.dao.TestItemMapper.TestItemMap, Type=fxapp01.dto.TestItemDTO
2015-03-12 23:26:04,975 [main] DEBUG fxapp01.dao.BatisORM - Column=ID, Property=id, JavaType=class java.math.BigInteger
2015-03-12 23:26:04,975 [main] DEBUG fxapp01.dao.BatisORM - Column=NAME, Property=name, JavaType=class java.lang.String
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.TestItemDAO - <<< constructor
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.TestItemDAO - >>> insertRow
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BaseDao - >>> getMapper
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,975 [main] ERROR fxapp01.dao.TestItemDAO - 
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): fxapp01.dao.TestItemMapper.insertRow
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:189)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:43)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:51)
	at com.sun.proxy.$Proxy9.insertRow(Unknown Source)
	at fxapp01.dao.TestItemDAO.insertRow(TestItemDAO.java:131)
	at fxapp01.dao.DAOTest01.testInsertRow(DAOTest01.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-03-12 23:26:04,975 [main] TRACE fxapp01.dao.BaseDao - >>> closeDBSession. session=org.apache.ibatis.session.defaults.DefaultSqlSession@cb51256
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.DAOTest01 - >>> testInsertRowBySP
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.TestItemDAO - >>> constructor
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> getBeanPropertiesMapping
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BatisORM - >>> getDAOProperties()
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,983 [main] DEBUG fxapp01.dao.BatisORM - ResultMap ID=fxapp01.dao.TestItemMapper.TestItemMap, Type=fxapp01.dto.TestItemDTO
2015-03-12 23:26:04,983 [main] DEBUG fxapp01.dao.BatisORM - Column=ID, Property=id, JavaType=class java.math.BigInteger
2015-03-12 23:26:04,983 [main] DEBUG fxapp01.dao.BatisORM - Column=NAME, Property=name, JavaType=class java.lang.String
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.TestItemDAO - <<< constructor
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.TestItemDAO - >>> insertRowBySP
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> getMapper
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,983 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,983 [main] ERROR fxapp01.dao.TestItemDAO - 
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): fxapp01.dao.TestItemMapper.insertRowBySP
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:189)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:43)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:51)
	at com.sun.proxy.$Proxy9.insertRowBySP(Unknown Source)
	at fxapp01.dao.TestItemDAO.insertRowBySP(TestItemDAO.java:149)
	at fxapp01.dao.DAOTest01.testInsertRowBySP(DAOTest01.java:148)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-03-12 23:26:04,984 [main] TRACE fxapp01.dao.BaseDao - >>> closeDBSession. session=org.apache.ibatis.session.defaults.DefaultSqlSession@25af5db5
2015-03-12 23:26:04,991 [main] TRACE fxapp01.dao.DAOTest01 - >>> testInsertRowBySP2
2015-03-12 23:26:04,991 [main] TRACE fxapp01.dao.TestItemDAO - >>> constructor
2015-03-12 23:26:04,991 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,991 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,991 [main] TRACE fxapp01.dao.BaseDao - >>> getBeanPropertiesMapping
2015-03-12 23:26:04,991 [main] TRACE fxapp01.dao.BatisORM - >>> getDAOProperties()
2015-03-12 23:26:04,991 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:04,992 [main] DEBUG fxapp01.dao.BatisORM - ResultMap ID=fxapp01.dao.TestItemMapper.TestItemMap, Type=fxapp01.dto.TestItemDTO
2015-03-12 23:26:04,992 [main] DEBUG fxapp01.dao.BatisORM - Column=ID, Property=id, JavaType=class java.math.BigInteger
2015-03-12 23:26:04,992 [main] DEBUG fxapp01.dao.BatisORM - Column=NAME, Property=name, JavaType=class java.lang.String
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.TestItemDAO - <<< constructor
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.TestItemDAO - >>> insertRowBySP2
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.BaseDao - >>> getMapper
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:04,992 [main] ERROR fxapp01.dao.TestItemDAO - 
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): fxapp01.dao.TestItemMapper.insertRowBySP2
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:189)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:43)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:51)
	at com.sun.proxy.$Proxy9.insertRowBySP2(Unknown Source)
	at fxapp01.dao.TestItemDAO.insertRowBySP2(TestItemDAO.java:166)
	at fxapp01.dao.DAOTest01.testInsertRowBySP2(DAOTest01.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-03-12 23:26:04,992 [main] TRACE fxapp01.dao.BaseDao - >>> closeDBSession. session=org.apache.ibatis.session.defaults.DefaultSqlSession@5f3a4b84
2015-03-12 23:26:05,000 [main] TRACE fxapp01.dao.DataCacheTest01 - >>> testProductRefsObservList
2015-03-12 23:26:05,011 [main] TRACE fxapp01.ProductRefsObservList - >>> constructor
2015-03-12 23:26:05,011 [main] DEBUG fxapp01.ProductRefsObservList - before new DataCacheReadOnly
2015-03-12 23:26:05,018 [main] TRACE fxapp01.dao.DataCacheReadOnly - >>> constructor(dataFetcher)
2015-03-12 23:26:05,018 [main] DEBUG fxapp01.dao.DataCacheReadOnly - before new IntRange
2015-03-12 23:26:05,018 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=2147483647, parentRange=null)
2015-03-12 23:26:05,018 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=first=0, length=2147483647, parentRange=null)
2015-03-12 23:26:05,018 [main] TRACE fxapp01.dao.DataCacheReadOnly - <<< constructor(dataFetcher)
2015-03-12 23:26:05,018 [main] TRACE fxapp01.dao.DataCacheReadOnly - >>> constructor(dataFetcher, defSize, maxSize)
2015-03-12 23:26:05,018 [main] TRACE fxapp01.dao.DataCacheReadOnly - <<< constructor(dataFetcher, defSize, maxSize)
2015-03-12 23:26:05,018 [main] DEBUG fxapp01.ProductRefsObservList - before FXCollections.observableList
2015-03-12 23:26:05,034 [main] DEBUG fxapp01.ProductRefsObservList - before new ProductRefsDAO
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.TestItemDAO - >>> constructor
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> getBeanPropertiesMapping
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BatisORM - >>> getDAOProperties()
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BatisORM - >>> getConfiguration
2015-03-12 23:26:05,034 [main] DEBUG fxapp01.dao.BatisORM - ResultMap ID=fxapp01.dao.TestItemMapper.TestItemMap, Type=fxapp01.dto.TestItemDTO
2015-03-12 23:26:05,034 [main] DEBUG fxapp01.dao.BatisORM - Column=ID, Property=id, JavaType=class java.math.BigInteger
2015-03-12 23:26:05,034 [main] DEBUG fxapp01.dao.BatisORM - Column=NAME, Property=name, JavaType=class java.lang.String
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.TestItemDAO - <<< constructor
2015-03-12 23:26:05,034 [main] DEBUG fxapp01.ProductRefsObservList - before requestDataPage
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dto.NestedIntRange - >>> contructor(first=0, length=0, parentRange=first=0, length=2147483647, parentRange=null)
2015-03-12 23:26:05,034 [main] DEBUG fxapp01.dto.NestedIntRange - >>> setLength(20)
2015-03-12 23:26:05,034 [main] TRACE fxapp01.ProductRefsObservList - >>> fetch(aRowsRange=first=0, length=20, parentRange=first=0, length=2147483647, parentRange=null), pos=0)
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.TestItemDAO - >>> select
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> constructor
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> createDaoFactory
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> getMapper
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> getDBSession
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BaseDao - >>> createDBSession
2015-03-12 23:26:05,034 [main] TRACE fxapp01.dao.BatisORM - >>> createDBSession
2015-03-12 23:26:05,035 [main] ERROR fxapp01.dao.TestItemDAO - 
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): fxapp01.dao.TestItemMapper.select
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:189)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:43)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:51)
	at com.sun.proxy.$Proxy9.select(Unknown Source)
	at fxapp01.dao.TestItemDAO.select(TestItemDAO.java:80)
	at fxapp01.ProductRefsObservList.fetch(ProductRefsObservList.java:268)
	at fxapp01.ProductRefsObservList.<init>(ProductRefsObservList.java:68)
	at fxapp01.dao.DataCacheTest01.testProductRefsObservList(DataCacheTest01.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-03-12 23:26:05,035 [main] TRACE fxapp01.dao.BaseDao - >>> closeDBSession. session=org.apache.ibatis.session.defaults.DefaultSqlSession@87f383f
2015-03-12 23:26:05,042 [main] TRACE fxapp01.dao.BeanPropertiesTest - addDataProperty
2015-03-12 23:26:05,068 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,068 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,068 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,075 [main] TRACE fxapp01.dao.BeanPropertiesTest - getDataPropertyIds
2015-03-12 23:26:05,075 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,075 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,075 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,083 [main] TRACE fxapp01.dao.BeanPropertiesTest - removeDataProperty
2015-03-12 23:26:05,083 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,083 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,083 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,090 [main] TRACE fxapp01.dao.BeanPropertiesTest - getDataProperty
2015-03-12 23:26:05,090 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,090 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,090 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,098 [main] TRACE fxapp01.dao.DescribedBeanPropertiesTest - addDataProperty
2015-03-12 23:26:05,114 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,114 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,114 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,121 [main] TRACE fxapp01.dao.DescribedBeanPropertiesTest - getDataPropertyIds
2015-03-12 23:26:05,121 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,121 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,121 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,128 [main] TRACE fxapp01.dao.DescribedBeanPropertiesTest - removeDataProperty
2015-03-12 23:26:05,128 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,128 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,129 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,137 [main] TRACE fxapp01.dao.DescribedBeanPropertiesTest - addDescribedDataProperty
2015-03-12 23:26:05,137 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,137 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,137 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,144 [main] TRACE fxapp01.dao.DescribedBeanPropertiesTest - getDescribedDataProperty
2015-03-12 23:26:05,144 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,144 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,144 [main] DEBUG fxapp01.dao.BeanProperties - name
2015-03-12 23:26:05,151 [main] TRACE fxapp01.dao.DescribedBeanPropertiesTest - getDataProperty
2015-03-12 23:26:05,151 [main] DEBUG fxapp01.dao.BeanProperties - class
2015-03-12 23:26:05,151 [main] DEBUG fxapp01.dao.BeanProperties - id
2015-03-12 23:26:05,151 [main] DEBUG fxapp01.dao.BeanProperties - name
