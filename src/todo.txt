--------------------------------------------------------------------------------
класс источника данных в простом случае реализует методы доступа данных по чтению - 
select(Range), selectCount(), selectByPK(PK)
также может реализовывать интерфейсы:
1. Cacheable - управление кешем. отправка измененных данных на сервер.
purge, flush, setSize(min, max)
2. Transactable - доступ к управлению транзакциями
commit, commitReatined, rollback, getAutoCommit, setAutoCommit(boolean)
3. Updatable, Clearable, которые предоставляют доступ к записи (модификации) 
данных и удалению данных updateByPK(PK), updateBatch(List), deleteByPK(PK), deleteBatch(List)
4. ModifyConflictResolver - обработка конфликтов версий/блокировок при записи изменений
5. Filterable
getFilters, FilterByExample, AddFilter, DelFilter, ClearFilters
6. Sortable
getSortOrder, AddSortOrder, DelSortOrder, ClearSortOrder
--------------------------------------------------------------------------------
доступ к данным для их получения/отправки может занимать заметное для пользователя 
время. желательно, чтобы на это время интерфейс не блокировался и была возможность 
отмены длительной операции. Как минимум, нужно, чтобы эта ситуация обозначалась 
в интерфейсе пользователя - появлялся курсор "ожидания", индикатор загрузки и т.п.
--------------------------------------------------------------------------------
источник данных нужен для доступа к: 
* БД (MyBatis, (?)jdbc)
* web - сервисам (xml, json, soap, ...)
* ldap (MS AD)
--------------------------------------------------------------------------------
